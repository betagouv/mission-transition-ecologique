name: Database Update

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  database_update:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Create .env file
        run: |
          echo "BREVO_API_TOKEN=${{ secrets.BREVO_API_TOKEN }}" >> .env
          echo "POSTHOG_WRITE_API_KEY=${{ secrets.POSTHOG_WRITE_API_KEY }}" >> .env
          echo "POSTHOG_READ_API_KEY=${{ secrets.POSTHOG_READ_API_KEY }}" >> .env
          echo "POSTHOG_PROJECT_ID=${{ secrets.POSTHOG_PROJECT_ID }}" >> .env
          echo "SIRENE_API_311_TOKEN=${{ secrets.SIRENE_API_311_TOKEN }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

      - run: npx nx run @tee/etl:build
      - run: npx nx run @tee/etl:update-database-ci
