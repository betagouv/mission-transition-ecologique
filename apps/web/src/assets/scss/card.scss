@use 'sass:meta';
@use 'sass:map';
@use '@gouvfr/dsfr/module/media-query';
@use '@gouvfr/dsfr/module/media-query/variable/breakpoints';
@use 'tool';
@use 'setting';

.fr-card {
  overflow: hidden;

  :hover {
    cursor: pointer;
  }

  &__header {
    @each $color, $properties in setting.$colors {
      &--#{$color} {
        @if meta.type-of($properties) == map {
          background-color: tool.scaleAlphaToHex(map.get($properties, "color"), -50%);
        } @else {
          background-color: tool.scaleAlphaToHex($properties, -50%);
        }
      }
    }

    .fr-card__img--contain img {
      object-fit: contain;
    }
  }

  &-banner {
    flex-direction: row;

    @include media-query.respond-from(xs) {
      height: 100px !important;
    }

    @include media-query.respond-from(sm) {
      max-height: 200px;
      height: 100% !important;
    }

    &:hover {
      cursor: auto !important;
    }

    :hover {
      cursor: auto !important;
    }

    .fr-card__content {
      justify-content: center;
    }

    .fr-card__header {
      flex: 0 0 33.333333%;
      width: 33.333333%;
      height: 100%;

      .fr-card__img {
        height: 100%;
        align-content: center;

        img {
          object-fit: fill;

          &.fr-responsive-img {
            height: 100%;
          }
        }
      }
    }

    .fr-card__title {
      font-weight: 400;
      font-size: 0.75rem;
      line-height: 1.25rem;

      @include media-query.respond-from(xs) {
        display: none;
      }

      @include media-query.respond-from(sm) {
        display: inherit;
      }
    }

    .fr-card__desc {
      font-weight: 700;

      @include media-query.respond-from(xs) {
        font-size: 1.25rem;
        line-height: 1.5rem;
      }

      @include media-query.respond-from(sm) {
        font-size: 2.5rem;
        line-height: 2.5rem;
      }
    }
  }

  &-priority {
    border: solid 0.20rem setting.$base-green;

    &--highlighted {
      .fr-card__header::before {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        border-left: 5rem solid transparent;
        border-top: 5rem solid setting.$base-green;
        width: 0;
      }
    }
  }

  &__header--priority {
    position: absolute;
    top: 1rem;
    right: 1rem;
    color: setting.$white;
    font-size: 2rem;
    font-weight: bold;
    z-index: 100;
  }

  .fr-badge--success {
    background-color: setting.$base-green;
    color: setting.$white
  }

  @each $color, $properties in setting.$colors {
    &--#{$color} {
      @if meta.type-of($properties) == map {
        background-color: map.get($properties, "color");
        color: map.get($properties, "color-with-background");
      }

      .fr-card__title {
        @if meta.type-of($properties) == map and map.has-key($properties, "is-inverted") and map.get($properties, "is-inverted") == true {
          color: map.get($properties, "color");
        } @else {
          color: var(--text-default-grey);
        }
      }
    }
  }
}
