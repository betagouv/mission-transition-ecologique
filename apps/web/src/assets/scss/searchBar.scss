@use "setting";
@use 'sass:meta';
@use 'sass:map';

input[type="search"] {
  &::-webkit-search-decoration,
  &::-webkit-search-cancel-button,
  &::-webkit-search-results-button,
  &::-webkit-search-results-decoration {
    display: none;
  }
}

.search-clear {
  background-color: var(--background-contrast-grey);
  border-radius: 0;

  &::before {
    mask-image: url("@gouvfr/dsfr/dist/icons/system/close-line.svg") !important;
  }

  &:disabled {
    background-color: var(--background-contrast-grey);
    box-shadow: inset 0 -2px 0 0 var(--border-disabled-grey);
    color: var(--text-disabled-grey);
  }
} 

.fr-search-bar {
  &-lg {
    .fr-input, .search-button, .search-clear {
      max-height: 3rem !important;
      line-height: 3rem;
    }
  }

  @each $color, $properties in setting.$colors {
    &--#{$color} {
      .fr-input, .search-button, .search-clear {
        @if meta.type-of($properties) == map {
          box-shadow: inset 0 -2px 0 0 map.get($properties, "color");
        } @else {
          box-shadow: inset 0 -2px 0 0 $properties;
        }
      }
    }
  }

  &--loading {
    .search-button {
      width: 2.5rem;
      &::before {
        content: "";
        border: 2px solid setting.$blue-france;
        border-top-color: transparent;
        border-radius: 50%;
        position: absolute;
        mask-image: none !important;
        background: none !important;
        animation: spin 0.8s linear infinite;
      }

      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }
    }
  }
}
