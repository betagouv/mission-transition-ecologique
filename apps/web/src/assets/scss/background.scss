@use '@gouvfr/dsfr/module/media-query';
@use '@gouvfr/dsfr/module/media-query/variable/breakpoints';
@use 'setting';
@use 'tool';
@use 'sass:color';

$opacitySettings: (
  --light: -50%,
  --lightness: -75%
);

@mixin getBackgroundColorByOpacity($properties, $opacity: 100%) {
  @if type-of($properties) == map {
    background-color: tool.scaleAlphaToHex(map-get($properties, "background-color"), $opacity);
  } @else {
    background-color: tool.scaleAlphaToHex($properties, $opacity);
  }
}

@mixin backgroundColor($color, $properties) {
  &--#{$color} {
    @include getBackgroundColorByOpacity($properties);
    @each $name, $opacity in $opacitySettings {
      &#{$name} {
        @include getBackgroundColorByOpacity($properties, $opacity);
      }
    }
  }
}

@each $color, $properties in setting.$colors {
  .fr-bg {
    @include backgroundColor($color, $properties);
    @each $breakpoint, $value in breakpoints.$values {
      $modifier: tool.modifierByBreakpoint($breakpoint);
      &#{$modifier} {
        @include media-query.respond-from($breakpoint) {
          @include backgroundColor($color, $properties);
        }
      }
    }
  }
}
