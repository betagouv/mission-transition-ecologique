@use 'sass:color';
@use 'sass:map';
@use 'sass:meta';
@use '../setting';

@function scaleAlphaToHex($color, $alpha) {
  $rgba: color.scale($color, $alpha: $alpha);

  @return color.mix(rgb(color.red($rgba), color.green($rgba), color.blue($rgba)), #fff, alpha($rgba) * 100%);
}

@mixin get-background-color-by-opacity($properties, $opacity: 100%) {
  @if meta.type-of($properties) == map {
    background-color: scaleAlphaToHex(map.get($properties, "color"), $opacity);
  } @else {
    /* Wrong parsing on function name from stylelint, so next line is disable */
    /* stylelint-disable-next-line function-name-case */
    background-color: scaleAlphaToHex($properties, $opacity);
  }
}

@mixin background-color($color, $properties) {
  &--#{$color} {
    @include get-background-color-by-opacity($properties);

    @each $name, $opacity in setting.$opacities {
      &#{$name} {
        @include get-background-color-by-opacity($properties, $opacity);
      }
    }
  }
}
